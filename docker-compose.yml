version: "3"

services:
  flask:
    build:
      context: ./flask-backend
    container_name: flask-backend
    ports:
      - "5000:5000"
    hostname: flask
    environment:
      APP_ENV: "dev"
      APP_PORT: 5000
      APP_DEBUG: "True"
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: flaskpassword
      MONGODB_HOSTNAME: mongodb
      ML_MODEL_URL: http://fastapi:8000  
      SP_MODEL_URL: http://fastapi:8000/alto    
    volumes:
      - ./flask-backend:/app
    depends_on:
      - mongodb
    restart: always

  #  client:
  #    build:
  #      context: client
  #      dockerfile: Dockerfile
  #    image: nginx
  #    container_name: client
  #    restart: unless-stopped
  #    environment:
  #      APP_ENV: "dev"
  #      APP_NAME: "webserver"
  #      APP_DEBUG: "True"
  #      SERVER_NAME: "webserver"
  #    ports:
  #      - "80:80"
  #      - "443:443"
  #    volumes:
  #      - nginxdata:/var/log/nginx
  #    depends_on:
  #      - server

  react:
    build:
      context: ./react-frontend
    container_name: react-frontend
    hostname: react
      #depends_on:
      #- flask
    ports:
      - "80:80"
      - "3000:3000"
    environment:
      - BACKEND_URL=http://flask:5000
    volumes:
      - ./react-frontend:/app
      # - ./react-frontend/node_modules:/app/node_modules
    restart: always


  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: flaskuser
      MONGO_INITDB_ROOT_PASSWORD: flaskpassword
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db
  
  fastapi:
    build:
      context: ./fastapi-ml-model
    ports:
      - "8000:8000"
    hostname: fastapi
    volumes:
      - ./fastapi-ml-model:/app
    restart: always

volumes:
  mongodbdata:
  fastapi-ml-model:
  flask-backend:
